apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/control-plane: operator-manager
    app.kubernetes.io/name: pipy-operator
    flomesh.io/inject: "false"
  name: flomesh
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: flomesh/serving-cert-fsm
    controller-gen.kubebuilder.io/version: v0.6.1
  labels:
    app.kubernetes.io/name: pipy-operator
  name: proxies.flomesh.io
spec:
  group: flomesh.io
  names:
    kind: Proxy
    listKind: ProxyList
    plural: proxies
    shortNames:
    - px
    singular: proxy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.mode
      name: Mode
      type: string
    - jsonPath: .spec.tplMode
      name: TplMode
      priority: 1
      type: string
    - jsonPath: .spec.port
      name: Port
      type: integer
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Proxy is the Schema for the proxies API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProxySpec defines the desired state of Proxy
            properties:
              config:
                additionalProperties:
                  type: string
                description: Config contains the pipy configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. This option is mutually exclusive with ConfigUrl option, you can only have either one.
                type: object
              configUrl:
                description: Url without script name from where pipy Config will be pulled. This option is mutually exclusive with Config option, you can only either one The valid format is protocol://IP:port/context - protocol is http/https - IP is either IP address or valid DNS name - port is the port number, which is between 1 and 65535
                type: string
              env:
                description: List of environment variables to set in the container. Cannot be updated.
                items:
                  description: EnvVar represents an environment variable present in a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes, optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              image:
                description: Image is the container image to run.  Image must have a tag. Defaults to flomesh/pipy-pjs:latest
                type: string
              mode:
                description: 'FlomeshMode specifies the mode of creating FLomesh topology. Valid values are: - "Standalone" (default): a standalone Flomesh; - "Ingress": works as DaemonSet and expose HostPort, proxy both inbound and outbound traffic;'
                enum:
                - Standalone
                - Ingress
                type: string
              port:
                default: 8080
                description: Number of Port to expose on the host. In Ingress Mode, it's the hostPort. If specified, this must be a valid port number, 0 < x < 65536. Defaults to 8080
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              replicas:
                default: 1
                description: Replicas is the number of replicas to maintain, it's useless in Ingress Mode Defaults to 1
                format: int32
                minimum: 1
                type: integer
              startupScriptName:
                description: The file name of entrypoint script for starting the PIPY instance. If not provided, the default value is config.js.
                type: string
            type: object
          status:
            description: ProxyStatus defines the observed state of Proxy
            properties:
              healthyReplicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: flomesh/serving-cert-fsm
    controller-gen.kubebuilder.io/version: v0.6.1
  labels:
    app.kubernetes.io/name: pipy-operator
  name: proxyprofiles.flomesh.io
spec:
  group: flomesh.io
  names:
    kind: ProxyProfile
    listKind: ProxyProfileList
    plural: proxyprofiles
    shortNames:
    - pf
    singular: proxyprofile
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.namespace
      name: Namespace
      type: string
    - jsonPath: .spec.disabled
      name: Disabled
      type: boolean
    - jsonPath: .spec.selector
      name: Selector
      priority: 1
      type: string
    - jsonPath: .status.configMaps
      name: Config
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProxyProfile is the Schema for the proxyprofiles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProxyProfileSpec defines the desired state of ProxyProfile
            properties:
              config:
                additionalProperties:
                  type: string
                description: Config contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. This option is mutually exclusive with ConfigUrl option, you can only have either one.
                type: object
              configUrl:
                description: Url without script name from where pipy Config will be pulled. This option is mutually exclusive with Config option, you can only have either one The valid format is protocol://IP:port/context - protocol is http/https - IP is either IP address or valid DNS name - port is the port number, which is between 1 and 65535
                type: string
              disabled:
                default: false
                description: If this ProxyProfile is Disabled. A disabled ProxyProfile doesn't participate the sidecar injection process.
                type: boolean
              namespace:
                description: Namespace ProxyProfile will only match the pods in the namespace otherwise, match pods in all namespaces(in cluster)
                type: string
              selector:
                description: Selector is a label query over pods that should be injected
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
              serviceEnv:
                description: List of environment variables to set in each of the service containers. Cannot be updated.
                items:
                  description: EnvVar represents an environment variable present in a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes, optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              sidecars:
                description: List of sidecars, will be injected into POD.
                items:
                  properties:
                    args:
                      description: 'Arguments to the entrypoint. The docker image''s CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated.'
                      items:
                        type: string
                      type: array
                    command:
                      description: 'Entrypoint array. Not executed within a shell. The docker image''s ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container''s environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated.'
                      items:
                        type: string
                      type: array
                    env:
                      description: List of environment variables to set in the sidecar container. Cannot be updated.
                      items:
                        description: EnvVar represents an environment variable present in a Container.
                        properties:
                          name:
                            description: Name of the environment variable. Must be a C_IDENTIFIER.
                            type: string
                          value:
                            description: 'Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                            type: string
                          valueFrom:
                            description: Source for the environment variable's value. Cannot be used if value is not empty.
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                              fieldRef:
                                description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                              resourceFieldRef:
                                description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes, optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                            type: object
                        required:
                        - name
                        type: object
                      type: array
                    image:
                      description: Docker image name. This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
                      type: string
                    imagePullPolicy:
                      description: Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated.
                      type: string
                    name:
                      description: Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
                      type: string
                    startupScriptName:
                      description: The file name of entrypoint script for starting the PIPY instance. If not provided, the default value is the value of Name field with surfix .js. For example, if the Name of the sidecar is proxy, it looks up proxy.js in config folder.
                      type: string
                  required:
                  - name
                  type: object
                minItems: 1
                type: array
            type: object
          status:
            description: ProxyProfileStatus defines the observed state of ProxyProfile
            properties:
              configMaps:
                additionalProperties:
                  type: string
                description: All associated config maps, key is namespace and value is the name of configmap
                type: object
            required:
            - configMaps
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: operator-manager-fsm
  namespace: flomesh
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: leader-election-role-fsm
  namespace: flomesh
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: pipy-operator
  name: manager-role-fsm
rules:
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - volumes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - proxies
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - proxies/finalizers
  verbs:
  - update
- apiGroups:
  - flomesh.io
  resources:
  - proxies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - flomesh.io
  resources:
  - proxyprofiles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - flomesh.io
  resources:
  - proxyprofiles/finalizers
  verbs:
  - update
- apiGroups:
  - flomesh.io
  resources:
  - proxyprofiles/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: metrics-reader-fsm
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: proxy-role-fsm
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: leader-election-rolebinding-fsm
  namespace: flomesh
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role-fsm
subjects:
- kind: ServiceAccount
  name: operator-manager-fsm
  namespace: flomesh
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: manager-rolebinding-fsm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manager-role-fsm
subjects:
- kind: ServiceAccount
  name: operator-manager-fsm
  namespace: flomesh
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: proxy-rolebinding-fsm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role-fsm
subjects:
- kind: ServiceAccount
  name: operator-manager-fsm
  namespace: flomesh
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 06558885.flomesh.io
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: manager-config-fsm
  namespace: flomesh
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/control-plane: operator-manager
    app.kubernetes.io/name: pipy-operator
  name: operator-manager-metrics-service-fsm
  namespace: flomesh
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    app.kubernetes.io/control-plane: operator-manager
    app.kubernetes.io/instance: operator-manager
    app.kubernetes.io/name: pipy-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: proxy-injector-svc-fsm
  namespace: flomesh
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 7443
  selector:
    app.kubernetes.io/instance: proxy-injector
    app.kubernetes.io/name: pipy-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: webhook-service-fsm
  namespace: flomesh
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/control-plane: operator-manager
    app.kubernetes.io/instance: operator-manager
    app.kubernetes.io/name: pipy-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/control-plane: operator-manager
    app.kubernetes.io/instance: operator-manager
    app.kubernetes.io/name: pipy-operator
  name: operator-manager-fsm
  namespace: flomesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/control-plane: operator-manager
      app.kubernetes.io/instance: operator-manager
      app.kubernetes.io/name: pipy-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/control-plane: operator-manager
        app.kubernetes.io/instance: operator-manager
        app.kubernetes.io/name: pipy-operator
    spec:
      containers:
      - args:
        - --leader-elect
        - --v=2
        command:
        - /operator-manager
        image: flomesh/operator-manager:0.4.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /mgr
          name: shared-mgr-res
      serviceAccountName: operator-manager-fsm
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - emptyDir: {}
        name: shared-mgr-res
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: proxy-injector
    app.kubernetes.io/name: pipy-operator
  name: proxy-injector-fsm
  namespace: flomesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: proxy-injector
      app.kubernetes.io/name: pipy-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: proxy-injector
        app.kubernetes.io/name: pipy-operator
    spec:
      containers:
      - args:
        - --enable-leader-election
        - --proxy-image=flomesh/pipy-pjs:0.4.0-116
        - --proxy-init-image=flomesh/proxy-init:0.4.3
        - --v=2
        command:
        - /proxy-injector
        image: flomesh/proxy-injector:0.4.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: webhook
        ports:
        - containerPort: 7443
          name: injector
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 50Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      serviceAccountName: operator-manager-fsm
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: serving-cert-fsm
  namespace: flomesh
spec:
  dnsNames:
  - webhook-service-fsm.flomesh.svc
  - webhook-service-fsm.flomesh.svc.cluster.local
  - proxy-injector-svc-fsm.flomesh.svc
  - proxy-injector-svc-fsm.flomesh.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: selfsigned-issuer-fsm
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/name: pipy-operator
  name: selfsigned-issuer-fsm
  namespace: flomesh
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: flomesh/serving-cert-fsm
  labels:
    app.kubernetes.io/name: pipy-operator
  name: mutating-webhook-configuration-fsm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook-service-fsm
      namespace: flomesh
      path: /mutate-flomesh-io-v1alpha1-proxy
  failurePolicy: Fail
  name: mproxy.flomesh.kb.io
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxies
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook-service-fsm
      namespace: flomesh
      path: /mutate-flomesh-io-v1alpha1-proxyprofile
  failurePolicy: Fail
  name: mproxyprofile.flomesh.kb.io
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxyprofiles
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: flomesh/serving-cert-fsm
  labels:
    app.kubernetes.io/name: pipy-operator
  name: proxy-injector-webhook-cfg-fsm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: proxy-injector-svc-fsm
      namespace: flomesh
      path: /proxy-injector-flomesh-io-v1alpha1
  failurePolicy: Fail
  name: injector.flomesh.kb.io
  namespaceSelector:
    matchLabels:
      flomesh.io/inject: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: flomesh/serving-cert-fsm
  labels:
    app.kubernetes.io/name: pipy-operator
  name: validating-webhook-configuration-fsm
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook-service-fsm
      namespace: flomesh
      path: /validate-flomesh-io-v1alpha1-proxy
  failurePolicy: Fail
  name: vproxy.flomesh.kb.io
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxies
  sideEffects: None
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: webhook-service-fsm
      namespace: flomesh
      path: /validate-flomesh-io-v1alpha1-proxyprofile
  failurePolicy: Fail
  name: vproxyprofile.flomesh.kb.io
  rules:
  - apiGroups:
    - flomesh.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - proxyprofiles
  sideEffects: None
